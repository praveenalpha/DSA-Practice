int minDifference(vector<int>& nums) {
        int sum = accumulate(nums.begin(), nums.end(), 0);
        int n = nums.size();
        vector<vector<bool>> dp(n+1, vector<bool> (sum+1, false));
        
        for(int i=0;i<=n;i++) dp[i][0] = true;
        for(int i=1;i<=n;i++){
            for(int j=1;j<=sum;j++){
                if(j - nums[i-1] >= 0 ) dp[i][j] = dp[i-1][j - nums[i-1]];
                dp[i][j] = dp[i][j] || dp[i-1][j];
            }
        }
        
        // calculate minimum sum diff
        int ans = INT_MAX;
        for(int i=0;i<=(sum/2);i++){
            if(dp[n][i]){
                ans = min(ans, abs(i - (sum-i)));
            }
        }
        return ans;
    }
