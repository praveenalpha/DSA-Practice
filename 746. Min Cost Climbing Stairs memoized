class Solution {
public:
    int min_cost_climbing_stairs(vector<int>& cost, int n,vector<int>& dp){
        if(n <= 1)  return dp[n] = cost[n];
        if(dp[n] != -1) return dp[n];
        return dp[n] = min(min_cost_climbing_stairs(cost, n-1, dp), min_cost_climbing_stairs(cost, n-2, dp)) + cost[n];
    }
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        cost.push_back(0);
        vector<int> dp(n+1, -1);
        // n >= 2   
        return min_cost_climbing_stairs(cost, n, dp);
    }
};
