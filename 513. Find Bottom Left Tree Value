/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        int ans = INT_MIN;
        while(q.size() > 0){
            int size = q.size();
            ans = INT_MIN;
            bool first_time = true;
            while(size--){
                TreeNode* r_node = q.front();
                q.pop();
                if(first_time == true){
                    first_time = false;
                    ans = r_node->val;
                }
                if(r_node->left != nullptr) q.push(r_node->left);
                if(r_node->right != nullptr) q.push(r_node->right);
            }
        }
        return ans;
    }
};
