// Tabulation 2D dp solve
    
    int knapSack(vector<int>& val, vector<int>& wt, int cap) {
        int n = val.size();
        vector<vector<int>> dp(n+1, vector<int> (cap+1, 0));
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=cap;j++){
                if(j-wt[i-1] >= 0)
                    dp[i][j] = val[i-1] + dp[i][j-wt[i-1]];
                dp[i][j] = max(dp[i][j], dp[i-1][j]);
            }
        }
        return dp[n][cap];
    }
