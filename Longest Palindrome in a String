string longestPalin (string& str) {
        int n = str.length();
        string ans = "";
        int max_length = 0;
        
        // odd length palindrome
        for(int axis = 0;axis<n;axis++){
            int orbit=1;
            while(axis - orbit >= 0 && axis+orbit < n && str[axis-orbit] == str[axis+orbit])    orbit++;
            orbit--;
            if(max_length < (orbit*2)+1){
                max_length = (orbit*2)+1;
                ans = str.substr(axis-orbit, (orbit*2)+1);
            }
        }
        
        // even length palindrome
        for(int axis=1;axis<n;axis++){
            int orbit=0;
            while(axis+orbit < n && axis-orbit-1 >= 0 && str[axis+orbit] == str[axis-orbit-1])  orbit++;
            orbit--;
            if(max_length < (2*orbit)+2){
                max_length = (2*orbit)+2;
                ans = str.substr(axis-orbit-1, (2*orbit)+2);
            }
        }
        
        return ans;
    }
